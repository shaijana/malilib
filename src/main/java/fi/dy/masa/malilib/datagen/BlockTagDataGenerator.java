package fi.dy.masa.malilib.datagen;

import java.util.concurrent.CompletableFuture;

import net.minecraft.block.Blocks;
import net.minecraft.registry.Registries;
import net.minecraft.registry.RegistryWrapper;
import net.fabricmc.fabric.api.datagen.v1.FabricDataOutput;
import net.fabricmc.fabric.api.datagen.v1.provider.FabricTagProvider;

import fi.dy.masa.malilib.data.MaLiLibTag;

public class BlockTagDataGenerator extends FabricTagProvider.BlockTagProvider
{
    public BlockTagDataGenerator(FabricDataOutput output, CompletableFuture<RegistryWrapper.WrapperLookup> registriesFuture)
    {
        super(output, registriesFuture);
    }

    @Override
    protected void configure(RegistryWrapper.WrapperLookup wrapper)
    {
        getTagBuilder(MaLiLibTag.Blocks.GLASS_BLOCKS)
                .add(Registries.BLOCK.getId(Blocks.GLASS))
                .add(Registries.BLOCK.getId(Blocks.BLACK_STAINED_GLASS))
                .add(Registries.BLOCK.getId(Blocks.BLUE_STAINED_GLASS))
                .add(Registries.BLOCK.getId(Blocks.BROWN_STAINED_GLASS))
                .add(Registries.BLOCK.getId(Blocks.CYAN_STAINED_GLASS))
                .add(Registries.BLOCK.getId(Blocks.GRAY_STAINED_GLASS))
                .add(Registries.BLOCK.getId(Blocks.GREEN_STAINED_GLASS))
                .add(Registries.BLOCK.getId(Blocks.LIGHT_BLUE_STAINED_GLASS))
                .add(Registries.BLOCK.getId(Blocks.LIGHT_GRAY_STAINED_GLASS))
                .add(Registries.BLOCK.getId(Blocks.LIME_STAINED_GLASS))
                .add(Registries.BLOCK.getId(Blocks.MAGENTA_STAINED_GLASS))
                .add(Registries.BLOCK.getId(Blocks.ORANGE_STAINED_GLASS))
                .add(Registries.BLOCK.getId(Blocks.PINK_STAINED_GLASS))
                .add(Registries.BLOCK.getId(Blocks.PURPLE_STAINED_GLASS))
                .add(Registries.BLOCK.getId(Blocks.RED_STAINED_GLASS))
                .add(Registries.BLOCK.getId(Blocks.YELLOW_STAINED_GLASS))
                .add(Registries.BLOCK.getId(Blocks.WHITE_STAINED_GLASS))
                .add(Registries.BLOCK.getId(Blocks.TINTED_GLASS))
        ;

        getTagBuilder(MaLiLibTag.Blocks.GLASS_PANES)
                .add(Registries.BLOCK.getId(Blocks.GLASS_PANE))
                .add(Registries.BLOCK.getId(Blocks.BLACK_STAINED_GLASS_PANE))
                .add(Registries.BLOCK.getId(Blocks.BLUE_STAINED_GLASS_PANE))
                .add(Registries.BLOCK.getId(Blocks.BROWN_STAINED_GLASS_PANE))
                .add(Registries.BLOCK.getId(Blocks.CYAN_STAINED_GLASS_PANE))
                .add(Registries.BLOCK.getId(Blocks.GRAY_STAINED_GLASS_PANE))
                .add(Registries.BLOCK.getId(Blocks.GREEN_STAINED_GLASS_PANE))
                .add(Registries.BLOCK.getId(Blocks.LIGHT_BLUE_STAINED_GLASS_PANE))
                .add(Registries.BLOCK.getId(Blocks.LIGHT_GRAY_STAINED_GLASS_PANE))
                .add(Registries.BLOCK.getId(Blocks.LIME_STAINED_GLASS_PANE))
                .add(Registries.BLOCK.getId(Blocks.MAGENTA_STAINED_GLASS_PANE))
                .add(Registries.BLOCK.getId(Blocks.ORANGE_STAINED_GLASS_PANE))
                .add(Registries.BLOCK.getId(Blocks.PINK_STAINED_GLASS_PANE))
                .add(Registries.BLOCK.getId(Blocks.PURPLE_STAINED_GLASS_PANE))
                .add(Registries.BLOCK.getId(Blocks.RED_STAINED_GLASS_PANE))
                .add(Registries.BLOCK.getId(Blocks.YELLOW_STAINED_GLASS_PANE))
                .add(Registries.BLOCK.getId(Blocks.WHITE_STAINED_GLASS_PANE))
        ;

        getTagBuilder(MaLiLibTag.Blocks.CONCRETE_BLOCKS)
                .add(Registries.BLOCK.getId(Blocks.BLACK_CONCRETE))
                .add(Registries.BLOCK.getId(Blocks.BLUE_CONCRETE))
                .add(Registries.BLOCK.getId(Blocks.BROWN_CONCRETE))
                .add(Registries.BLOCK.getId(Blocks.CYAN_CONCRETE))
                .add(Registries.BLOCK.getId(Blocks.GRAY_CONCRETE))
                .add(Registries.BLOCK.getId(Blocks.GREEN_CONCRETE))
                .add(Registries.BLOCK.getId(Blocks.LIGHT_BLUE_CONCRETE))
                .add(Registries.BLOCK.getId(Blocks.LIGHT_GRAY_CONCRETE))
                .add(Registries.BLOCK.getId(Blocks.LIME_CONCRETE))
                .add(Registries.BLOCK.getId(Blocks.MAGENTA_CONCRETE))
                .add(Registries.BLOCK.getId(Blocks.ORANGE_CONCRETE))
                .add(Registries.BLOCK.getId(Blocks.PINK_CONCRETE))
                .add(Registries.BLOCK.getId(Blocks.PURPLE_CONCRETE))
                .add(Registries.BLOCK.getId(Blocks.RED_CONCRETE))
                .add(Registries.BLOCK.getId(Blocks.YELLOW_CONCRETE))
                .add(Registries.BLOCK.getId(Blocks.WHITE_CONCRETE))
        ;

        getTagBuilder(MaLiLibTag.Blocks.CONCRETE_POWDER_FIX)
                .add(Registries.BLOCK.getId(Blocks.BLACK_CONCRETE_POWDER))
                .add(Registries.BLOCK.getId(Blocks.BLUE_CONCRETE_POWDER))
                .add(Registries.BLOCK.getId(Blocks.BROWN_CONCRETE_POWDER))
                .add(Registries.BLOCK.getId(Blocks.CYAN_CONCRETE_POWDER))
                .add(Registries.BLOCK.getId(Blocks.GRAY_CONCRETE_POWDER))
                .add(Registries.BLOCK.getId(Blocks.GREEN_CONCRETE_POWDER))
                .add(Registries.BLOCK.getId(Blocks.LIGHT_BLUE_CONCRETE_POWDER))
                .add(Registries.BLOCK.getId(Blocks.LIGHT_GRAY_CONCRETE_POWDER))
                .add(Registries.BLOCK.getId(Blocks.LIME_CONCRETE_POWDER))
                .add(Registries.BLOCK.getId(Blocks.MAGENTA_CONCRETE_POWDER))
                .add(Registries.BLOCK.getId(Blocks.ORANGE_CONCRETE_POWDER))
                .add(Registries.BLOCK.getId(Blocks.PINK_CONCRETE_POWDER))
                .add(Registries.BLOCK.getId(Blocks.PURPLE_CONCRETE_POWDER))
                .add(Registries.BLOCK.getId(Blocks.RED_CONCRETE_POWDER))
                .add(Registries.BLOCK.getId(Blocks.YELLOW_CONCRETE_POWDER))
                .add(Registries.BLOCK.getId(Blocks.WHITE_CONCRETE_POWDER))
        ;

        getTagBuilder(MaLiLibTag.Blocks.GLAZED_TERRACOTTA_BLOCKS)
                .add(Registries.BLOCK.getId(Blocks.BLACK_GLAZED_TERRACOTTA))
                .add(Registries.BLOCK.getId(Blocks.BLUE_GLAZED_TERRACOTTA))
                .add(Registries.BLOCK.getId(Blocks.BROWN_GLAZED_TERRACOTTA))
                .add(Registries.BLOCK.getId(Blocks.CYAN_GLAZED_TERRACOTTA))
                .add(Registries.BLOCK.getId(Blocks.GRAY_GLAZED_TERRACOTTA))
                .add(Registries.BLOCK.getId(Blocks.GREEN_GLAZED_TERRACOTTA))
                .add(Registries.BLOCK.getId(Blocks.LIGHT_BLUE_GLAZED_TERRACOTTA))
                .add(Registries.BLOCK.getId(Blocks.LIGHT_GRAY_GLAZED_TERRACOTTA))
                .add(Registries.BLOCK.getId(Blocks.LIME_GLAZED_TERRACOTTA))
                .add(Registries.BLOCK.getId(Blocks.MAGENTA_GLAZED_TERRACOTTA))
                .add(Registries.BLOCK.getId(Blocks.ORANGE_GLAZED_TERRACOTTA))
                .add(Registries.BLOCK.getId(Blocks.PINK_GLAZED_TERRACOTTA))
                .add(Registries.BLOCK.getId(Blocks.PURPLE_GLAZED_TERRACOTTA))
                .add(Registries.BLOCK.getId(Blocks.RED_GLAZED_TERRACOTTA))
                .add(Registries.BLOCK.getId(Blocks.YELLOW_GLAZED_TERRACOTTA))
                .add(Registries.BLOCK.getId(Blocks.WHITE_GLAZED_TERRACOTTA))
        ;

        getTagBuilder(MaLiLibTag.Blocks.ALL_SIGNS_FIX)
                .add(Registries.BLOCK.getId(Blocks.ACACIA_SIGN))
                .add(Registries.BLOCK.getId(Blocks.BAMBOO_SIGN))
                .add(Registries.BLOCK.getId(Blocks.BIRCH_SIGN))
                .add(Registries.BLOCK.getId(Blocks.CHERRY_SIGN))
                .add(Registries.BLOCK.getId(Blocks.CRIMSON_SIGN))
                .add(Registries.BLOCK.getId(Blocks.DARK_OAK_SIGN))
                .add(Registries.BLOCK.getId(Blocks.JUNGLE_SIGN))
                .add(Registries.BLOCK.getId(Blocks.MANGROVE_SIGN))
                .add(Registries.BLOCK.getId(Blocks.OAK_SIGN))
                .add(Registries.BLOCK.getId(Blocks.PALE_OAK_SIGN))
                .add(Registries.BLOCK.getId(Blocks.SPRUCE_SIGN))
                .add(Registries.BLOCK.getId(Blocks.WARPED_SIGN))
                .add(Registries.BLOCK.getId(Blocks.ACACIA_WALL_SIGN))
                .add(Registries.BLOCK.getId(Blocks.BAMBOO_WALL_SIGN))
                .add(Registries.BLOCK.getId(Blocks.BIRCH_WALL_SIGN))
                .add(Registries.BLOCK.getId(Blocks.CHERRY_WALL_SIGN))
                .add(Registries.BLOCK.getId(Blocks.CRIMSON_WALL_SIGN))
                .add(Registries.BLOCK.getId(Blocks.DARK_OAK_WALL_SIGN))
                .add(Registries.BLOCK.getId(Blocks.JUNGLE_WALL_SIGN))
                .add(Registries.BLOCK.getId(Blocks.MANGROVE_WALL_SIGN))
                .add(Registries.BLOCK.getId(Blocks.OAK_WALL_SIGN))
                .add(Registries.BLOCK.getId(Blocks.PALE_OAK_WALL_SIGN))
                .add(Registries.BLOCK.getId(Blocks.SPRUCE_WALL_SIGN))
                .add(Registries.BLOCK.getId(Blocks.WARPED_WALL_SIGN))
                .add(Registries.BLOCK.getId(Blocks.ACACIA_HANGING_SIGN))
                .add(Registries.BLOCK.getId(Blocks.BAMBOO_HANGING_SIGN))
                .add(Registries.BLOCK.getId(Blocks.BIRCH_HANGING_SIGN))
                .add(Registries.BLOCK.getId(Blocks.CHERRY_HANGING_SIGN))
                .add(Registries.BLOCK.getId(Blocks.CRIMSON_HANGING_SIGN))
                .add(Registries.BLOCK.getId(Blocks.DARK_OAK_HANGING_SIGN))
                .add(Registries.BLOCK.getId(Blocks.JUNGLE_HANGING_SIGN))
                .add(Registries.BLOCK.getId(Blocks.MANGROVE_HANGING_SIGN))
                .add(Registries.BLOCK.getId(Blocks.OAK_HANGING_SIGN))
                .add(Registries.BLOCK.getId(Blocks.PALE_OAK_HANGING_SIGN))
                .add(Registries.BLOCK.getId(Blocks.SPRUCE_HANGING_SIGN))
                .add(Registries.BLOCK.getId(Blocks.WARPED_HANGING_SIGN))
                .add(Registries.BLOCK.getId(Blocks.ACACIA_WALL_HANGING_SIGN))
                .add(Registries.BLOCK.getId(Blocks.BAMBOO_WALL_HANGING_SIGN))
                .add(Registries.BLOCK.getId(Blocks.BIRCH_WALL_HANGING_SIGN))
                .add(Registries.BLOCK.getId(Blocks.CHERRY_WALL_HANGING_SIGN))
                .add(Registries.BLOCK.getId(Blocks.CRIMSON_WALL_HANGING_SIGN))
                .add(Registries.BLOCK.getId(Blocks.DARK_OAK_WALL_HANGING_SIGN))
                .add(Registries.BLOCK.getId(Blocks.JUNGLE_WALL_HANGING_SIGN))
                .add(Registries.BLOCK.getId(Blocks.MANGROVE_WALL_HANGING_SIGN))
                .add(Registries.BLOCK.getId(Blocks.OAK_WALL_HANGING_SIGN))
                .add(Registries.BLOCK.getId(Blocks.PALE_OAK_WALL_HANGING_SIGN))
                .add(Registries.BLOCK.getId(Blocks.SPRUCE_WALL_HANGING_SIGN))
                .add(Registries.BLOCK.getId(Blocks.WARPED_WALL_HANGING_SIGN))
        ;

        getTagBuilder(MaLiLibTag.Blocks.ALL_BANNERS_FIX)
                .add(Registries.BLOCK.getId(Blocks.BLACK_BANNER))
                .add(Registries.BLOCK.getId(Blocks.BLUE_BANNER))
                .add(Registries.BLOCK.getId(Blocks.BROWN_BANNER))
                .add(Registries.BLOCK.getId(Blocks.CYAN_BANNER))
                .add(Registries.BLOCK.getId(Blocks.GRAY_BANNER))
                .add(Registries.BLOCK.getId(Blocks.GREEN_BANNER))
                .add(Registries.BLOCK.getId(Blocks.LIGHT_BLUE_BANNER))
                .add(Registries.BLOCK.getId(Blocks.LIGHT_GRAY_BANNER))
                .add(Registries.BLOCK.getId(Blocks.LIME_BANNER))
                .add(Registries.BLOCK.getId(Blocks.MAGENTA_BANNER))
                .add(Registries.BLOCK.getId(Blocks.ORANGE_BANNER))
                .add(Registries.BLOCK.getId(Blocks.PINK_BANNER))
                .add(Registries.BLOCK.getId(Blocks.PURPLE_BANNER))
                .add(Registries.BLOCK.getId(Blocks.RED_BANNER))
                .add(Registries.BLOCK.getId(Blocks.YELLOW_BANNER))
                .add(Registries.BLOCK.getId(Blocks.WHITE_BANNER))
                .add(Registries.BLOCK.getId(Blocks.BLACK_WALL_BANNER))
                .add(Registries.BLOCK.getId(Blocks.BLUE_WALL_BANNER))
                .add(Registries.BLOCK.getId(Blocks.BROWN_WALL_BANNER))
                .add(Registries.BLOCK.getId(Blocks.CYAN_WALL_BANNER))
                .add(Registries.BLOCK.getId(Blocks.GRAY_WALL_BANNER))
                .add(Registries.BLOCK.getId(Blocks.GREEN_WALL_BANNER))
                .add(Registries.BLOCK.getId(Blocks.LIGHT_BLUE_WALL_BANNER))
                .add(Registries.BLOCK.getId(Blocks.LIGHT_GRAY_WALL_BANNER))
                .add(Registries.BLOCK.getId(Blocks.LIME_WALL_BANNER))
                .add(Registries.BLOCK.getId(Blocks.MAGENTA_WALL_BANNER))
                .add(Registries.BLOCK.getId(Blocks.ORANGE_WALL_BANNER))
                .add(Registries.BLOCK.getId(Blocks.PINK_WALL_BANNER))
                .add(Registries.BLOCK.getId(Blocks.PURPLE_WALL_BANNER))
                .add(Registries.BLOCK.getId(Blocks.RED_WALL_BANNER))
                .add(Registries.BLOCK.getId(Blocks.YELLOW_WALL_BANNER))
                .add(Registries.BLOCK.getId(Blocks.WHITE_WALL_BANNER))
        ;

        getTagBuilder(MaLiLibTag.Blocks.CORAL_FANS_FIX)
                .add(Registries.BLOCK.getId(Blocks.BRAIN_CORAL_FAN))
                .add(Registries.BLOCK.getId(Blocks.FIRE_CORAL_FAN))
                .add(Registries.BLOCK.getId(Blocks.BUBBLE_CORAL_FAN))
                .add(Registries.BLOCK.getId(Blocks.TUBE_CORAL_FAN))
                .add(Registries.BLOCK.getId(Blocks.HORN_CORAL_FAN))
                .add(Registries.BLOCK.getId(Blocks.BRAIN_CORAL_WALL_FAN))
                .add(Registries.BLOCK.getId(Blocks.FIRE_CORAL_WALL_FAN))
                .add(Registries.BLOCK.getId(Blocks.BUBBLE_CORAL_WALL_FAN))
                .add(Registries.BLOCK.getId(Blocks.TUBE_CORAL_WALL_FAN))
                .add(Registries.BLOCK.getId(Blocks.HORN_CORAL_WALL_FAN))
                .add(Registries.BLOCK.getId(Blocks.DEAD_BRAIN_CORAL_FAN))
                .add(Registries.BLOCK.getId(Blocks.DEAD_FIRE_CORAL_FAN))
                .add(Registries.BLOCK.getId(Blocks.DEAD_BUBBLE_CORAL_FAN))
                .add(Registries.BLOCK.getId(Blocks.DEAD_TUBE_CORAL_FAN))
                .add(Registries.BLOCK.getId(Blocks.DEAD_HORN_CORAL_FAN))
                .add(Registries.BLOCK.getId(Blocks.DEAD_BRAIN_CORAL_WALL_FAN))
                .add(Registries.BLOCK.getId(Blocks.DEAD_FIRE_CORAL_WALL_FAN))
                .add(Registries.BLOCK.getId(Blocks.DEAD_BUBBLE_CORAL_WALL_FAN))
                .add(Registries.BLOCK.getId(Blocks.DEAD_TUBE_CORAL_WALL_FAN))
                .add(Registries.BLOCK.getId(Blocks.DEAD_HORN_CORAL_WALL_FAN))
        ;

        getTagBuilder(MaLiLibTag.Blocks.LEAVES_FIX)
                .add(Registries.BLOCK.getId(Blocks.ACACIA_LEAVES))
                .add(Registries.BLOCK.getId(Blocks.BIRCH_LEAVES))
                .add(Registries.BLOCK.getId(Blocks.CHERRY_LEAVES))
                .add(Registries.BLOCK.getId(Blocks.DARK_OAK_LEAVES))
                .add(Registries.BLOCK.getId(Blocks.JUNGLE_LEAVES))
                .add(Registries.BLOCK.getId(Blocks.MANGROVE_LEAVES))
                .add(Registries.BLOCK.getId(Blocks.OAK_LEAVES))
                .add(Registries.BLOCK.getId(Blocks.PALE_OAK_LEAVES))
                .add(Registries.BLOCK.getId(Blocks.SPRUCE_LEAVES))
        ;

        getTagBuilder(MaLiLibTag.Blocks.WOOL_BLOCKS_FIX)
                .add(Registries.BLOCK.getId(Blocks.BLACK_WOOL))
                .add(Registries.BLOCK.getId(Blocks.BLUE_WOOL))
                .add(Registries.BLOCK.getId(Blocks.BROWN_WOOL))
                .add(Registries.BLOCK.getId(Blocks.CYAN_WOOL))
                .add(Registries.BLOCK.getId(Blocks.GRAY_WOOL))
                .add(Registries.BLOCK.getId(Blocks.GREEN_WOOL))
                .add(Registries.BLOCK.getId(Blocks.LIGHT_BLUE_WOOL))
                .add(Registries.BLOCK.getId(Blocks.LIGHT_GRAY_WOOL))
                .add(Registries.BLOCK.getId(Blocks.LIME_WOOL))
                .add(Registries.BLOCK.getId(Blocks.MAGENTA_WOOL))
                .add(Registries.BLOCK.getId(Blocks.ORANGE_WOOL))
                .add(Registries.BLOCK.getId(Blocks.PINK_WOOL))
                .add(Registries.BLOCK.getId(Blocks.PURPLE_WOOL))
                .add(Registries.BLOCK.getId(Blocks.RED_WOOL))
                .add(Registries.BLOCK.getId(Blocks.YELLOW_WOOL))
                .add(Registries.BLOCK.getId(Blocks.WHITE_WOOL))
        ;

        getTagBuilder(MaLiLibTag.Blocks.NEEDS_SILK_TOUCH)
                .addTag(MaLiLibTag.Blocks.GLASS_BLOCKS.id())
                .addTag(MaLiLibTag.Blocks.GLASS_PANES.id())
                .addTag(MaLiLibTag.Blocks.CORAL_FANS_FIX.id())
                .addTag(MaLiLibTag.Blocks.LEAVES_FIX.id())
                .addTag(MaLiLibTag.Blocks.SCULK_BLOCKS.id())
                .add(Registries.BLOCK.getId(Blocks.BEEHIVE))
                .add(Registries.BLOCK.getId(Blocks.BEE_NEST))
                .add(Registries.BLOCK.getId(Blocks.BOOKSHELF))
                .add(Registries.BLOCK.getId(Blocks.BLUE_ICE))
                .add(Registries.BLOCK.getId(Blocks.BUSH))
                .add(Registries.BLOCK.getId(Blocks.CAMPFIRE))
                .add(Registries.BLOCK.getId(Blocks.CHISELED_BOOKSHELF))
                .add(Registries.BLOCK.getId(Blocks.ENDER_CHEST))
                .add(Registries.BLOCK.getId(Blocks.ICE))
                .add(Registries.BLOCK.getId(Blocks.PACKED_ICE))
                .add(Registries.BLOCK.getId(Blocks.SOUL_CAMPFIRE))
                .add(Registries.BLOCK.getId(Blocks.TURTLE_EGG))
        ;

        getTagBuilder(MaLiLibTag.Blocks.NEEDS_SHEARS)
                .addTag(MaLiLibTag.Blocks.LEAVES_FIX.id())
                .addTag(MaLiLibTag.Blocks.WOOL_BLOCKS_FIX.id())
                .add(Registries.BLOCK.getId(Blocks.CAVE_VINES))
                .add(Registries.BLOCK.getId(Blocks.CAVE_VINES_PLANT))
                .add(Registries.BLOCK.getId(Blocks.COBWEB))
                .add(Registries.BLOCK.getId(Blocks.DEAD_BUSH))
                .add(Registries.BLOCK.getId(Blocks.FERN))
                .add(Registries.BLOCK.getId(Blocks.GLOW_LICHEN))
                .add(Registries.BLOCK.getId(Blocks.HANGING_ROOTS))
                .add(Registries.BLOCK.getId(Blocks.LARGE_FERN))
                .add(Registries.BLOCK.getId(Blocks.NETHER_SPROUTS))
                .add(Registries.BLOCK.getId(Blocks.PALE_HANGING_MOSS))
                .add(Registries.BLOCK.getId(Blocks.SHORT_GRASS))
                .add(Registries.BLOCK.getId(Blocks.SHORT_DRY_GRASS))
                .add(Registries.BLOCK.getId(Blocks.SEAGRASS))
                .add(Registries.BLOCK.getId(Blocks.TALL_GRASS))
                .add(Registries.BLOCK.getId(Blocks.TALL_DRY_GRASS))
                .add(Registries.BLOCK.getId(Blocks.TALL_SEAGRASS))
                .add(Registries.BLOCK.getId(Blocks.TRIPWIRE))
                .add(Registries.BLOCK.getId(Blocks.TWISTING_VINES))
                .add(Registries.BLOCK.getId(Blocks.TWISTING_VINES_PLANT))
                .add(Registries.BLOCK.getId(Blocks.WEEPING_VINES))
                .add(Registries.BLOCK.getId(Blocks.WEEPING_VINES_PLANT))
                .add(Registries.BLOCK.getId(Blocks.VINE))
        ;

        getTagBuilder(MaLiLibTag.Blocks.GRAVITY_BLOCKS)
                .addTag(MaLiLibTag.Blocks.CONCRETE_POWDER_FIX.id())
                .add(Registries.BLOCK.getId(Blocks.ANVIL))
                .add(Registries.BLOCK.getId(Blocks.CHIPPED_ANVIL))
                .add(Registries.BLOCK.getId(Blocks.DAMAGED_ANVIL))
                .add(Registries.BLOCK.getId(Blocks.SAND))
                .add(Registries.BLOCK.getId(Blocks.RED_SAND))
                .add(Registries.BLOCK.getId(Blocks.GRAVEL))
                .add(Registries.BLOCK.getId(Blocks.SUSPICIOUS_GRAVEL))
                .add(Registries.BLOCK.getId(Blocks.SUSPICIOUS_SAND))
                .add(Registries.BLOCK.getId(Blocks.POINTED_DRIPSTONE))
                .add(Registries.BLOCK.getId(Blocks.SCAFFOLDING))
                .add(Registries.BLOCK.getId(Blocks.DRAGON_EGG))
        ;

        getTagBuilder(MaLiLibTag.Blocks.IMMOVABLE_BLOCKS)
                .addTag(MaLiLibTag.Blocks.ALL_SIGNS_FIX.id())
                .addTag(MaLiLibTag.Blocks.ALL_BANNERS_FIX.id())
                .add(Registries.BLOCK.getId(Blocks.BARRIER))
                .add(Registries.BLOCK.getId(Blocks.BARREL))
                .add(Registries.BLOCK.getId(Blocks.BEACON))
                .add(Registries.BLOCK.getId(Blocks.BEDROCK))
                .add(Registries.BLOCK.getId(Blocks.BEEHIVE))
                .add(Registries.BLOCK.getId(Blocks.BEE_NEST))
                .add(Registries.BLOCK.getId(Blocks.BLAST_FURNACE))
                .add(Registries.BLOCK.getId(Blocks.BREWING_STAND))
                .add(Registries.BLOCK.getId(Blocks.CALIBRATED_SCULK_SENSOR))
                .add(Registries.BLOCK.getId(Blocks.CAMPFIRE))
                .add(Registries.BLOCK.getId(Blocks.CHEST))
                .add(Registries.BLOCK.getId(Blocks.CHISELED_BOOKSHELF))
                .add(Registries.BLOCK.getId(Blocks.COMMAND_BLOCK))
                .add(Registries.BLOCK.getId(Blocks.CONDUIT))
                .add(Registries.BLOCK.getId(Blocks.CRAFTER))
                .add(Registries.BLOCK.getId(Blocks.CRYING_OBSIDIAN))
                .add(Registries.BLOCK.getId(Blocks.DAYLIGHT_DETECTOR))
                .add(Registries.BLOCK.getId(Blocks.DISPENSER))
                .add(Registries.BLOCK.getId(Blocks.DROPPER))
                .add(Registries.BLOCK.getId(Blocks.ENCHANTING_TABLE))
                .add(Registries.BLOCK.getId(Blocks.END_GATEWAY))
                .add(Registries.BLOCK.getId(Blocks.END_PORTAL))
                .add(Registries.BLOCK.getId(Blocks.END_PORTAL_FRAME))
                .add(Registries.BLOCK.getId(Blocks.ENDER_CHEST))
                .add(Registries.BLOCK.getId(Blocks.FURNACE))
                .add(Registries.BLOCK.getId(Blocks.GRINDSTONE))
                .add(Registries.BLOCK.getId(Blocks.HOPPER))
                .add(Registries.BLOCK.getId(Blocks.JIGSAW))
                .add(Registries.BLOCK.getId(Blocks.JUKEBOX))
                .add(Registries.BLOCK.getId(Blocks.LECTERN))
                .add(Registries.BLOCK.getId(Blocks.LIGHT))
                .add(Registries.BLOCK.getId(Blocks.LODESTONE))
                .add(Registries.BLOCK.getId(Blocks.MOVING_PISTON))
                .add(Registries.BLOCK.getId(Blocks.NETHER_PORTAL))
                .add(Registries.BLOCK.getId(Blocks.OBSIDIAN))
                .add(Registries.BLOCK.getId(Blocks.PISTON_HEAD))
                .add(Registries.BLOCK.getId(Blocks.REINFORCED_DEEPSLATE))
                .add(Registries.BLOCK.getId(Blocks.RESPAWN_ANCHOR))
                .add(Registries.BLOCK.getId(Blocks.SCULK_CATALYST))
                .add(Registries.BLOCK.getId(Blocks.SCULK_SENSOR))
                .add(Registries.BLOCK.getId(Blocks.SCULK_SHRIEKER))
                .add(Registries.BLOCK.getId(Blocks.SMOKER))
                .add(Registries.BLOCK.getId(Blocks.SOUL_CAMPFIRE))
                .add(Registries.BLOCK.getId(Blocks.SPAWNER))
                .add(Registries.BLOCK.getId(Blocks.STRUCTURE_BLOCK))
                .add(Registries.BLOCK.getId(Blocks.STRUCTURE_VOID))
                .add(Registries.BLOCK.getId(Blocks.TRAPPED_CHEST))
                .add(Registries.BLOCK.getId(Blocks.TRIAL_SPAWNER))
                .add(Registries.BLOCK.getId(Blocks.VAULT))
        ;

        getTagBuilder(MaLiLibTag.Blocks.ORE_BLOCKS)
                .add(Registries.BLOCK.getId(Blocks.COAL_ORE))
                .add(Registries.BLOCK.getId(Blocks.COPPER_ORE))
                .add(Registries.BLOCK.getId(Blocks.DEEPSLATE_COAL_ORE))
                .add(Registries.BLOCK.getId(Blocks.DEEPSLATE_COPPER_ORE))
                .add(Registries.BLOCK.getId(Blocks.DEEPSLATE_DIAMOND_ORE))
                .add(Registries.BLOCK.getId(Blocks.DEEPSLATE_EMERALD_ORE))
                .add(Registries.BLOCK.getId(Blocks.DEEPSLATE_GOLD_ORE))
                .add(Registries.BLOCK.getId(Blocks.DEEPSLATE_IRON_ORE))
                .add(Registries.BLOCK.getId(Blocks.DEEPSLATE_LAPIS_ORE))
                .add(Registries.BLOCK.getId(Blocks.DEEPSLATE_REDSTONE_ORE))
                .add(Registries.BLOCK.getId(Blocks.DIAMOND_ORE))
                .add(Registries.BLOCK.getId(Blocks.EMERALD_ORE))
                .add(Registries.BLOCK.getId(Blocks.GOLD_ORE))
                .add(Registries.BLOCK.getId(Blocks.IRON_ORE))
                .add(Registries.BLOCK.getId(Blocks.LAPIS_ORE))
                .add(Registries.BLOCK.getId(Blocks.NETHER_GOLD_ORE))
                .add(Registries.BLOCK.getId(Blocks.NETHER_QUARTZ_ORE))
                .add(Registries.BLOCK.getId(Blocks.REDSTONE_ORE))
        ;
        getTagBuilder(MaLiLibTag.Blocks.SCULK_BLOCKS)
                .add(Registries.BLOCK.getId(Blocks.CALIBRATED_SCULK_SENSOR))
                .add(Registries.BLOCK.getId(Blocks.SCULK))
                .add(Registries.BLOCK.getId(Blocks.SCULK_CATALYST))
                .add(Registries.BLOCK.getId(Blocks.SCULK_SENSOR))
                .add(Registries.BLOCK.getId(Blocks.SCULK_SHRIEKER))
                .add(Registries.BLOCK.getId(Blocks.SCULK_VEIN))
        ;
    }
}
